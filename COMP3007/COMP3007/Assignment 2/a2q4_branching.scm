; Ryan Lo (101117765)

; f(n) = n, if n<3
; f(n) = 3f(n-1) + 2f(n-2) + f(n-3), otherwise
; recursive
(define (f n)
  (if (< n 3) n
      (+ (* 3 (f (- n 1))) (* 2 (f (- n 2))) (f (- n 3))))
)

(f 5)

;(+ (* 3 (f (- n 1))) (* 2 (f (- n 2))) (f (- n 3)))
(+ (* 3 (f (- 5 1))) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (f 4)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (f 3)) (* 2 (f 2)) (f 1))) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (f 3)) (* 2 2) 1)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (+ (* 3 (f (- 3 1))) (* 2 (f (- 3 2))) (f (- 3 3)))) (* 2 2) 1)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (+ (* 3 (f 2)) (* 2 (f 1)) (f 0))) (* 2 2) 1)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (+ (* 3 2) (* 2 1) 0)) (* 2 2) 1)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 (+ 6 2 0)) 4 1)) (* 2 (f (- 5 2))) (f (- 5 3)))
(+ (* 3 (+ (* 3 8) 4 1)) (* 2 (f 3)) (f 2))
(+ (* 3 (+ 24 4 1)) (* 2 (+ (* 3 (f (- 3 1))) (* 2 (f (- 3 2))) (f (- 3 3)))) 2)
(+ (* 3 29) (* 2 (+ (* 3 (f 2)) (* 2 (f 1)) (f 0))) 2)
(+ (* 3 29) (* 2 (+ (* 3 2) (* 2 1) 0)) 2)
(+ (* 3 29) (* 2 (+ 6 2 0)) 2)
(+ (* 3 29) (* 2 8) 2)
(+ (* 3 29) 16 2)
(+ 87 16 2)
105


; iterative
(define (f n)
  (define (iterate n1 n2 n3 count)
    (if (< count 3) n1
        (iterate (+ (* 3 n1) (* 2 n2) n3) n1 n2 (- count 1)))
  )
  (if (< n 3) n
      (iterate 2 1 0 n))
)

(f 10)