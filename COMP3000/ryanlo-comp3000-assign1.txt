COMP 3000 2021F Assignment 1
Name: Ryan Lo
Student ID: 101117765

Collaborators:

1. The answers: Ottawa, 5280, and Bob will give you the correct answer to the corresponding questions 1, 3 and 4. But question 2 with the answer as ENV: DOGNAME will not work in this case. Entering ENV: DOGNAME as the answer to question 2 will result in question 2 being answered as ENV: and question 3 being answered as DOGNAME. The space in the response input separates the answer into 2 different ones. So by default there are no answers that will give you a perfect score until you change the funtionality of the second question.

2. By using the -S option when compiling, it produced a .s file which shows the assembly code being used in the file. The second question in 3000quiz is represented as a string in assembly language. The string on line 57 in main() is also represented as a string in assembly language just like the second question in 3000quiz.

3. the_questions and the_answers are stored in the static area since these are global variables. By creating a global variable and checking its relative address, it does show that the_questions and the_answers are stored in relatively around the same memory location. The response (user input) is stored in the stack since its a local variable. By creating a local char variable and checking its address, it is relatively the same as the response.

4. Since the answers array end with a NULL, you could have a while loop that loops and counts the number of questions till you reach the end which is NULL. The answers array ends with a NULL which helps tell us when the end of the array is reached when looping over it.

5. By setting the answer to the forth question to the first argument passed into args in main using the_answers[3] = args[1]. This will change the answer to the forth question to be the first argument passed into the args. By setting the answer to the argument passed in, it does not copy the string itself. Checking the memory address of the answer in the answers array as well as the answer passed into args, they are located at the same place in memory.

6. If the environment variable DOGNAME is set to Anil's dog's name Roshi, you must first set the environment variable on your system using export DOGNAME="Roshi", get the environment variable using getenv("DOGNAME"), this will return the name of Anil's dog's name which is Roshi. Now we can set the answer of the second question to be the return of the environment variable DOGNAME using the_answers[1] = getenv("DOGNAME"). And by setting the answer to the environment variable itself, it does not copy the string and create a new instance of it. Checking the memory address of the answer in the answers array as well as the environment variable used, they are located at the same place in memory.

7. The memory address of everything stays consistent after every execution of the program. Printing our the memory address of the different variables after executing it multiple times shows that the memory address of each one stays consistent after every execution. 

8. Adding an environment variable changes the memory location of the global and local variables. After adding the environment variable and removing it, printing it out shows that every variable has changed enough that they aren't relatively close to each other as they used to after the environment variable was added.

9. Using the command strace -o syscalls.log ./3000quiz logs all the syscalls into the log file. There are syscalls in 3000quiz binary. Using the strace command, it displays all the different syscalls that it makes. It needs to open and access its dependencies.

10. Using the -static option while compiling it creates a static version of it. The static version of this, 3000quiz-static also as syscalls in its binary. Using the strace command and the logging it, it shows all the syscalls that it makes. It does not have as much as the dynamic version of 3000quiz because they doesn't have to open and access its dependencies like the dynamic version has.