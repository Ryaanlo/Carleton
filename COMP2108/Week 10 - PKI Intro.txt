Integrity of public keys
- knowing to whom a public key "belongs" to

Public-key certificate
- associate a public key with owner
- certificate a data structure that binds public key to a named subject by digital signature generated by trusted third party called Certification Authority (CA)
- verify correctness of signature
- validity-period (end date)

CA checks before issuing certificate:
1. Evidence of knowledge of corresponding private key
2. Evidence of ownership related to Subject
3. Confirmation of asserted natural-world names (drivers license)

Validating certificates and certificate chains
CAs issue certificates for end-entities, 
e.g., human users in the case of email certificates, web servers in the case
of TLS certificates. 
A CA may also issue a certificate for the public key of another CA,

when the first CA is a trust anchor or atop a
hierarchy
This results in the concept of a certificate chain 

Before the public key in a certificate is relied on for some intended purpose, the relying party
should validate the certificate
1. has not expired
2. has not been revoked
3. has a signature that verifies (using math), using the signing CA's public key
4. is signed by a CA whose public key is (available and) itself trusted
5. has subject matching for use
6. use is consistent with constraints
7. if not directly signed by CA, then valid chain of certs from trust anchor to target must be aval

out of band channels - check with other clients to see if it's okay

Self-signed certificates
doesn't know if public key should be trusted

Trust on first use (TOFU)
- assume no attack
- check to make sure everything is okay when you reconnect
